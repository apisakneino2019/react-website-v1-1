{"ast":null,"code":"var _jsxFileName = \"D:\\\\wed-2564\\\\react-website-v1-1\\\\src\\\\App.js\";\nimport React, { Component } from \"react\"; // import Navbar from \"./components/Navbar\";\n\nimport \"./App.css\";\nimport cookie from \"react-cookies\";\nimport { googleTranslate } from \"../node_modules/utils/googleTranslate\"; // import Home from \"./components/pages/Home\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// import Services from \"./components/pages/Services\";\n// import AboutUs from \"./components/pages/AboutUs\";\n// import Products from \"./components/pages/Products\";\n// import SignUp from \"./components/pages/SignUp\";\n// import Test from \"./components/pages/Test\";\n// import Annunciator from \"./components/pages/Annunciator\";\n// import Controlpanels from \"./components/pages/Controlpanels\";\n// import Devices from \"./components/pages/Devices\";\n// import Heatdetectors from \"./components/pages/Heatdetectors\";\n// import Manualpullstation from \"./components/pages/Manualpullstation\";\n// import Firealarmmodules from \"./components/pages/Firealarmmodules\";\n// import Productstest from \"./components/pages/Productstest\";\n// import ProductsFrist from \"./components/pages/ProductsFrist\";\n// import ProductsSecond from \"./components/pages/ProductsSecond\";\n// import ContactUs from \"./components/ContactUs\";\n// import Scrolltop from \"./Scrolltop\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      languageCodes: [],\n      language: cookie.load(\"language\") ? cookie.load(\"language\") : \"en\",\n      question: cookie.load(\"question\") ? cookie.load(\"question\") : \"What language do you prefer to read with?\"\n    };\n\n    this.changeHandler = language => {\n      let {\n        question\n      } = this.state;\n      let cookieLanguage = cookie.load(\"language\");\n      let transQuestion = \"\";\n\n      const translating = transQuestion => {\n        if (question !== transQuestion) {\n          this.setState({\n            question: transQuestion\n          });\n          cookie.save(\"question\", transQuestion, {\n            path: \"/\"\n          });\n        }\n      }; // translate the question when selecting a different language\n\n\n      if (language !== cookieLanguage) {\n        googleTranslate.translate(question, language, function (err, translation) {\n          transQuestion = translation.translatedText;\n          translating(transQuestion);\n        });\n      }\n\n      this.setState({\n        language\n      });\n      cookie.save(\"language\", language, {\n        path: \"/\"\n      });\n    };\n\n    this.divStyle = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100vh\",\n      width: \"100wh\"\n    };\n  }\n\n  // return (\n  //   <>\n  //     {\" \"}\n  //     <Router>\n  //       <Navbar />\n  //       <Switch>\n  //         <Route path=\"/\" exact component={Home} />\n  //         <Route path=\"/services\" component={Services} />\n  //         <Route path=\"/AboutUs\" component={AboutUs} />\n  //         <Route path=\"/products\" component={Products} />\n  //         <Route path=\"/sign-up\" component={SignUp} />\n  //         <Route path=\"/test\" component={Test} />\n  //         <Route path=\"/Annunciator\" component={Annunciator} />\n  //         <Route path=\"/Controlpanels\" component={Controlpanels} />\n  //         <Route path=\"/Devices\" component={Devices} />\n  //         <Route path=\"/Heatdetectors\" component={Heatdetectors} />\n  //         <Route path=\"/Manualpullstation\" component={Manualpullstation} />\n  //         <Route path=\"/Firealarmmodules\" component={Firealarmmodules} />\n  //         <Route path=\"/Productstest\" component={Productstest} />\n  //         <Route path=\"/ProductsFrist\" component={ProductsFrist} />\n  //         <Route path=\"/ProductsSecond\" component={ProductsSecond} />\n  //         <Route path=\"/ContactUs\" component={ContactUs} />\n  //       </Switch>\n  //       <Scrolltop />\n  //     </Router>\n  //   </>\n  // );\n  componentDidMount() {\n    // load all of the language options from Google Translate to your app state\n    googleTranslate.getSupportedLanguages(\"en\", function (err, languageCodes) {\n      getLanguageCodes(languageCodes); // use a callback function to setState\n    });\n\n    const getLanguageCodes = languageCodes => {\n      this.setState({\n        languageCodes\n      });\n    };\n  }\n\n  render() {\n    const {\n      languageCodes,\n      language,\n      question\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: this.divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, question), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"select-language\",\n      value: language,\n      onChange: e => this.changeHandler(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, languageCodes.map(lang => /*#__PURE__*/React.createElement(\"option\", {\n      key: lang.language,\n      value: lang.language,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, lang.name))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/wed-2564/react-website-v1-1/src/App.js"],"names":["React","Component","cookie","googleTranslate","App","state","languageCodes","language","load","question","changeHandler","cookieLanguage","transQuestion","translating","setState","save","path","translate","err","translation","translatedText","divStyle","display","alignItems","justifyContent","height","width","componentDidMount","getSupportedLanguages","getLanguageCodes","render","e","target","value","map","lang","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\n// import Navbar from \"./components/Navbar\";\r\nimport \"./App.css\";\r\nimport cookie from \"react-cookies\";\r\n\r\nimport { googleTranslate } from \"../node_modules/utils/googleTranslate\";\r\n// import Home from \"./components/pages/Home\";\r\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n// import Services from \"./components/pages/Services\";\r\n// import AboutUs from \"./components/pages/AboutUs\";\r\n// import Products from \"./components/pages/Products\";\r\n// import SignUp from \"./components/pages/SignUp\";\r\n// import Test from \"./components/pages/Test\";\r\n// import Annunciator from \"./components/pages/Annunciator\";\r\n// import Controlpanels from \"./components/pages/Controlpanels\";\r\n// import Devices from \"./components/pages/Devices\";\r\n// import Heatdetectors from \"./components/pages/Heatdetectors\";\r\n// import Manualpullstation from \"./components/pages/Manualpullstation\";\r\n// import Firealarmmodules from \"./components/pages/Firealarmmodules\";\r\n// import Productstest from \"./components/pages/Productstest\";\r\n// import ProductsFrist from \"./components/pages/ProductsFrist\";\r\n// import ProductsSecond from \"./components/pages/ProductsSecond\";\r\n// import ContactUs from \"./components/ContactUs\";\r\n\r\n// import Scrolltop from \"./Scrolltop\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    languageCodes: [],\r\n    language: cookie.load(\"language\") ? cookie.load(\"language\") : \"en\",\r\n    question: cookie.load(\"question\")\r\n      ? cookie.load(\"question\")\r\n      : \"What language do you prefer to read with?\",\r\n  };\r\n\r\n  // return (\r\n\r\n  //   <>\r\n  //     {\" \"}\r\n  //     <Router>\r\n  //       <Navbar />\r\n  //       <Switch>\r\n  //         <Route path=\"/\" exact component={Home} />\r\n\r\n  //         <Route path=\"/services\" component={Services} />\r\n  //         <Route path=\"/AboutUs\" component={AboutUs} />\r\n  //         <Route path=\"/products\" component={Products} />\r\n  //         <Route path=\"/sign-up\" component={SignUp} />\r\n  //         <Route path=\"/test\" component={Test} />\r\n  //         <Route path=\"/Annunciator\" component={Annunciator} />\r\n  //         <Route path=\"/Controlpanels\" component={Controlpanels} />\r\n  //         <Route path=\"/Devices\" component={Devices} />\r\n  //         <Route path=\"/Heatdetectors\" component={Heatdetectors} />\r\n  //         <Route path=\"/Manualpullstation\" component={Manualpullstation} />\r\n  //         <Route path=\"/Firealarmmodules\" component={Firealarmmodules} />\r\n  //         <Route path=\"/Productstest\" component={Productstest} />\r\n  //         <Route path=\"/ProductsFrist\" component={ProductsFrist} />\r\n  //         <Route path=\"/ProductsSecond\" component={ProductsSecond} />\r\n  //         <Route path=\"/ContactUs\" component={ContactUs} />\r\n  //       </Switch>\r\n  //       <Scrolltop />\r\n  //     </Router>\r\n  //   </>\r\n  // );\r\n  componentDidMount() {\r\n    // load all of the language options from Google Translate to your app state\r\n\r\n    googleTranslate.getSupportedLanguages(\"en\", function (err, languageCodes) {\r\n      getLanguageCodes(languageCodes); // use a callback function to setState\r\n    });\r\n\r\n    const getLanguageCodes = (languageCodes) => {\r\n      this.setState({ languageCodes });\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { languageCodes, language, question } = this.state;\r\n\r\n    return (\r\n      <div style={this.divStyle}>\r\n        <p>{question}</p>\r\n\r\n        {/* iterate through language options to create a select box */}\r\n        <select\r\n          className=\"select-language\"\r\n          value={language}\r\n          onChange={(e) => this.changeHandler(e.target.value)}\r\n        >\r\n          {languageCodes.map((lang) => (\r\n            <option key={lang.language} value={lang.language}>\r\n              {lang.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  changeHandler = (language) => {\r\n    let { question } = this.state;\r\n    let cookieLanguage = cookie.load(\"language\");\r\n    let transQuestion = \"\";\r\n\r\n    const translating = (transQuestion) => {\r\n      if (question !== transQuestion) {\r\n        this.setState({ question: transQuestion });\r\n        cookie.save(\"question\", transQuestion, { path: \"/\" });\r\n      }\r\n    };\r\n\r\n    // translate the question when selecting a different language\r\n    if (language !== cookieLanguage) {\r\n      googleTranslate.translate(\r\n        question,\r\n        language,\r\n        function (err, translation) {\r\n          transQuestion = translation.translatedText;\r\n          translating(transQuestion);\r\n        }\r\n      );\r\n    }\r\n\r\n    this.setState({ language });\r\n    cookie.save(\"language\", language, { path: \"/\" });\r\n  };\r\n\r\n  // just some inline css to center our demo\r\n  divStyle = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"100vh\",\r\n    width: \"100wh\",\r\n  };\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}